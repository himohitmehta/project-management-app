import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import React from "react";
import { Button } from "~/components/ui/button";
import { Input } from "~/components/ui/input";

import { api } from "~/utils/api";

export default function Home() {
  // const createProject = api.project.create.useMutation();

  const { data } = api.project.getLatest.useQuery();
  const { project } = api.useUtils();
  const { mutate } = api.project.create.useMutation({
    async onMutate({ name }) {
      // await mutate({ name, projectId });
      const list = data ?? [];
      project.getLatest.setData(undefined, [
        ...list,
        { name, id: `${Math.random()}`, ownerId: sessionData?.user?.id ?? "" },
      ]);
    },
  });
  const { data: sessionData } = useSession();

  const handleClick = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const name = projectName;
    mutate({ name });
    setProjectName("");
  };

  const [projectName, setProjectName] = React.useState("");
  // console.log({ project: project.data });
  if (data)
    return (
      <>
        <Head>
          <title>Project Management App</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className=" flex min-h-screen flex-col items-center justify-center ">
          <form onSubmit={handleClick} className="flex  gap-2">
            <Input
              // className="border rounded-md "
              value={projectName}
              onChange={(e) => setProjectName(e.target.value)}
              required
            />
            <Button type="submit">Create Project</Button>
          </form>
          {/* <Button variant={"outline"} onClick={() => handleClick()}>
            Create Project
          </Button> */}
          {Array.isArray(data) &&
            data.map((item) => {
              return (
                <div key={item.id}>
                  <Link href={`/${item.id}`}>{item.name}</Link>
                </div>
              );
            })}

          <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
            <div className="flex flex-col items-center gap-2">
              <AuthShowcase />
            </div>
          </div>
        </main>
      </>
    );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-black no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
